apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId "com.yazhi1992.moon"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 11
        versionName "0.1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [moduleName: project.getName()]
//            }
//        }
        //bugly 升级
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    signingConfigs {
        release {
            storeFile file("../moon.keystore")
            storePassword "zyz123456"
            keyAlias "lina"
            keyPassword properties.getProperty("pwd")
            v2SigningEnabled true
        }
    }

//    kapt {
//        generateStubs = true
//    }

    kapt {
        arguments {
            arg("moduleName", project.getName())
        }
    }

    dataBinding {
        enabled true
    }

    def gitCommitCount = "git rev-list HEAD --count".execute().text.trim()

    buildTypes {
        debug {
            buildConfigField "String", "LEAN_CLOUD_ID", properties.getProperty("leanCloudId")
            buildConfigField "String", "LEAN_CLOUD_KEY", properties.getProperty("leanCloudKey")
            buildConfigField "String", "QQ_ID", "\"1106624697\""
            buildConfigField "String", "QQ_KEY", "\"IeOM0d7nzg2uIAps\""
            buildConfigField "String", "BUGLY_ID", "\"d29b66c253\""
            buildConfigField "String", "LEANCLOUD_QQ_LOGIN_URL", "\"https://leancloud.cn/1.1/sns/callback/ypt2m1s8xla33l8o\""

            minifyEnabled false // 是否进行混淆
            applicationIdSuffix '.debug'
            versionNameSuffix ".${gitCommitCount}"
        }
        release {
            buildConfigField "String", "LEAN_CLOUD_ID", properties.getProperty("leanCloudId")
            buildConfigField "String", "LEAN_CLOUD_KEY", properties.getProperty("leanCloudKey")
            buildConfigField "String", "QQ_ID", "\"1106624697\""
            buildConfigField "String", "QQ_KEY", "\"IeOM0d7nzg2uIAps\""
            buildConfigField "String", "BUGLY_ID", "\"5d768fb313\""
            buildConfigField "String", "LEANCLOUD_QQ_LOGIN_URL", "\"https://leancloud.cn/1.1/sns/callback/ypt2m1s8xla33l8o\""

            minifyEnabled false
            versionNameSuffix ".${gitCommitCount}"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    //robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        debug {
            res.srcDirs = ['src/debug/res']
        }
    }
}

//greendao配置
greendao {
    schemaVersion 3  //版本号
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation rootProject.ext.dependencies.constraintLayout
    implementation rootProject.ext.dependencies.supportDesign
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    //arouter
    implementation rootProject.ext.dependencies.arouter
    kapt rootProject.ext.dependencies.arouterCompiler

    //robolectric
    testImplementation rootProject.ext.dependencies.robolectric

    //dagger
    kapt rootProject.ext.dependencies.dagger2Compiler
    implementation rootProject.ext.dependencies.dagger2

    //logger
    implementation rootProject.ext.dependencies.logger

    //okhttp
    implementation rootProject.ext.dependencies.okhttp

    compile(rootProject.ext.dependencies.permissionsDispatcher) {
        // if you don't use android.app.Fragment you can exclude support for them
        exclude module: "support-v13"
    }
    annotationProcessor rootProject.ext.dependencies.permissionsDispatcherProcessor

    //bugly
    implementation rootProject.ext.dependencies.buglyCrash
    implementation rootProject.ext.dependencies.buglyNativeCrash

    implementation rootProject.ext.dependencies.eventbus

    implementation project(":yazhilib")

    //leancloud
    implementation ('cn.leancloud:storage-android:5.0.26'){
        exclude group: 'com.alibaba', module: 'fastjson'
        exclude group: 'org.ligboy.retrofit2', module: 'converter-fastjson'
    }
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.alibaba:fastjson:1.1.70.android'
    implementation 'org.ligboy.retrofit2:converter-fastjson-android:2.1.0'

    //recyclerview 多布局
    implementation(rootProject.ext.dependencies.multitype, {
        exclude group: 'com.android.support'
    })

    implementation rootProject.ext.dependencies.glide
    annotationProcessor rootProject.ext.dependencies.glideCompiler

    implementation rootProject.ext.dependencies.multiDex

    //下拉刷新
    implementation rootProject.ext.dependencies.smartRefresh
    implementation rootProject.ext.dependencies.smartRefreshHeader

    implementation rootProject.ext.dependencies.dagger
    annotationProcessor rootProject.ext.dependencies.daggerCompiler
    implementation rootProject.ext.dependencies.daggerAndroid
//    implementation rootProject.ext.daggerAndroidSupport
//    annotationProcessor rootProject.ext.daggerAndroidProcessor

    implementation "org.greenrobot:greendao:$rootProject.green_dao_version"
    implementation 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.0.2'

    compile(project(":matisse")) {
        exclude group: 'com.github.bumptech.glide', module: 'glide'
    }

    implementation rootProject.ext.dependencies.luban

    api rootProject.ext.dependencies.kotlin_jdk8

    implementation rootProject.ext.dependencies.cardview

    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
}

//apply from: 'tinker-support.gradle'